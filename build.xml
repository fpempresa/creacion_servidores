<?xml version="1.0" encoding="UTF-8"?>
<project name="fpempresa" default="default" basedir=".">
    <description>Crea y configura todos los servidores de fpempresa</description>
  
    <target name="default" depends="-configureAnt" >        
		
		
		
		
    </target>
	

	<target name="deploy-produccion" depends="-configureAnt" >
		<configureserver 
			userName="${OPENSHIFT_PRODUCCION_LOGIN}" 
			password="${OPENSHIFT_PRODUCCION_PASSWORD}" 
			domainName="${PRODUCCION_DOMAIN}" 
			applicationName="${PRODUCCION_APPLICATION}" 
			gitrepository="${GIT_REPOSITORY_APP}" 
			privateKeyFile="${PRODUCCION_PRIVATE_KEY}"
		>	
			<git 
				command="rm" 
				options="pom.xml"
				dir="${LOCAL_PATH_GIT}"
				failerror="false"
			/>
			<git 
				command="rm" 
				options="-r src"
				dir="${LOCAL_PATH_GIT}"
				failerror="false"
			/>	
			<copy file="../${APP_NAME}/dist/${APP_NAME}.war" tofile="${LOCAL_PATH_GIT}/webapps/ROOT.war" overwrite="true" />
			<git 
				command="add " 
				options="*"
				dir="${LOCAL_PATH_GIT}"
				failerror="false"
			/>
			
		</configureserver>
		
<!--		
		<configureserver 
			userName="${OPENSHIFT_PRODUCCION_LOGIN}" 
			password="${OPENSHIFT_PRODUCCION_PASSWORD}" 
			domainName="${PRODUCCION_DOMAIN}" 
			applicationName="${PRODUCCION_LOGSTASH_APPLICATION}" 
			gitrepository="${GIT_REPOSITORY_LOGSTASH}" 
			privateKeyFile="${PRODUCCION_PRIVATE_KEY}"
		/>			
-->		
	
		
	</target>
	
	<target name="deploy-preproduccion" depends="-configureAnt" >
	</target>
	
	<target name="deploy-pruebas" depends="-configureAnt" >
	</target>
	
	<target name="deploy-desarrollo" depends="-configureAnt" >
	</target>	
	
	<target name="deploy-log" depends="-configureAnt,deploy-log-elasticsearch,deploy-log-kibana" >	
	</target>	
	
	<target name="deploy-log-elasticsearch" depends="-configureAnt" >
		<configureserver 
			userName="${OPENSHIFT_LOG_LOGIN}" 
			password="${OPENSHIFT_LOG_PASSWORD}" 
			domainName="${LOG_DOMAIN}" 
			applicationName="${ELASTICSEARCH_APPLICATION}" 
			gitrepository="${GIT_REPOSITORY_ELASTICSEARCH}" 
			privateKeyFile="${LOG_PRIVATE_KEY}"
		/>			
	</target>	
	<target name="deploy-log-kibana" depends="-configureAnt" >
		<configureserver 
			userName="${OPENSHIFT_LOG_LOGIN}" 
			password="${OPENSHIFT_LOG_PASSWORD}" 
			domainName="${LOG_DOMAIN}" 
			applicationName="${KIBANA_APPLICATION}" 
			gitrepository="${GIT_REPOSITORY_KIBANA}" 
			privateKeyFile="${LOG_PRIVATE_KEY}"
		/>
	</target>

	
	
	<target name="create-server-produccion" depends="-configureAnt" >
		<createserverapp 
			userName="${OPENSHIFT_PRODUCCION_LOGIN}"  
			password="${OPENSHIFT_PRODUCCION_PASSWORD}"  
			domainName="${PRODUCCION_DOMAIN}"  
			applicationName="${PRODUCCION_APPLICATION}"  
			logapplicationName="${PRODUCCION_LOGSTASH_APPLICATION}"  
			privateKeyFile="${PRODUCCION_PRIVATE_KEY}"   
		/>	
	</target>
	
	<target name="create-server-preproduccion" depends="-configureAnt" >
		<createserverapp 
			userName="${OPENSHIFT_PREPRODUCCION_LOGIN}"  
			password="${OPENSHIFT_PREPRODUCCION_PASSWORD}"  
			domainName="${PREPRODUCCION_DOMAIN}"  
			applicationName="${PREPRODUCCION_APPLICATION}"  
			logapplicationName="${PREPRODUCCION_LOGSTASH_APPLICATION}"  
			privateKeyFile="${PREPRODUCCION_PRIVATE_KEY}"   
		/>			
	</target>
	
	<target name="create-server-pruebas" depends="-configureAnt" >
		<createserverapp 
			userName="${OPENSHIFT_PRUEBAS_LOGIN}"  
			password="${OPENSHIFT_PRUEBAS_PASSWORD}"  
			domainName="${PRUEBAS_DOMAIN}"  
			applicationName="${PRUEBAS_APPLICATION}"  
			logapplicationName="${PRUEBAS_LOGSTASH_APPLICATION}"  
			privateKeyFile="${PRUEBAS_PRIVATE_KEY}"   
		/>
	</target>
	
	<target name="create-server-desarrollo" depends="-configureAnt" >
	</target>
	
	<target name="create-server-log" depends="-configureAnt" >
		<removeallpublickeys 
			userName="${OPENSHIFT_LOG_LOGIN}" 
			password="${OPENSHIFT_LOG_PASSWORD}"  
		/>
		<destroyalldomains     
			userName="${OPENSHIFT_LOG_LOGIN}" 
			password="${OPENSHIFT_LOG_PASSWORD}" 
			force="true" 
		/>
	
		<createkeypair     
			privateKeyFile="${LOG_PRIVATE_KEY}"
		/>
		<addpublickey     
			userName="${OPENSHIFT_LOG_LOGIN}" 
			password="${OPENSHIFT_LOG_PASSWORD}" 
			publicKeyName="ant" 
			publicKeyFile="${LOG_PUBLIC_KEY}"
		/>
		<createdomain     
			userName="${OPENSHIFT_LOG_LOGIN}" 
			password="${OPENSHIFT_LOG_PASSWORD}" 
			domainName="${LOG_DOMAIN}" 
			
		/>

		<createapplication     
			userName="${OPENSHIFT_LOG_LOGIN}" 
			password="${OPENSHIFT_LOG_PASSWORD}" 
			domainName="${LOG_DOMAIN}" 
			applicationName="${ELASTICSEARCH_APPLICATION}"  
			cartridgeName="diy-0.1"
			gearProfileName="small"
			scalable="false"
		/>
		<createapplication     
			userName="${OPENSHIFT_LOG_LOGIN}" 
			password="${OPENSHIFT_LOG_PASSWORD}" 
			domainName="${LOG_DOMAIN}" 
			applicationName="${KIBANA_APPLICATION}"  
			cartridgeName="php-5.4"
			gearProfileName="small"
			scalable="false"
		/>		
		
	</target>
	
	

	<target name="backup-database-produccion" depends="-configureAnt" >
	</target>
	
	<target name="backup-database-preproduccion" depends="-configureAnt" >
	</target>
	
	<target name="backup-database-pruebas" depends="-configureAnt" >
	</target>

	
	
	<target name="restore-database-produccion" depends="-configureAnt" >
	</target>
	
	<target name="restore-database-preproduccion" depends="-configureAnt" >
	</target>
	
	<target name="restore-database-pruebas" depends="-configureAnt" >
	</target>
 
    <target name="-configureAnt">
        <echo>Configurando librerias de Ant</echo>

        <property name="libAnt.path" value="libant" />

        <path id="libAnt.classpath">
            <fileset dir="${libAnt.path}">
                <include name="**/*.jar" />
            </fileset>
        </path>
		
		<!-- OpenShift -->
		<taskdef classpathref="libAnt.classpath" resource="es/logongas/openshift/ant/antlib.xml" />
        <!-- El try-cath -->
        <taskdef classpathref="libAnt.classpath" resource="net/sf/antcontrib/antcontrib.properties"/>
        <!-- Manejo de ficheros XML -->
        <taskdef classpathref="libAnt.classpath" name="xmltask" classname="com.oopsconsultancy.xmltask.ant.XmlTask"/>
		<!-- Flyway -->
		<taskdef classpathref="libAnt.classpath" resource="com/googlecode/flyway/ant/antlib.xml" />
		<!-- Cargar todas las variables de entorno -->
		<property environment="env"/>
		<!-- Cargar el fichero de propiedades -->
		<property file="proyecto.properties "/>
	   
		<property name="SSH_KEYS_FOLDER" value="../.ssh-${APP_NAME}" />
		<mkdir dir="${SSH_KEYS_FOLDER}" />
		
		<property name="PRODUCCION_PRIVATE_KEY" value="${SSH_KEYS_FOLDER}/pro_rsa" />
		<property name="PRODUCCION_DOMAIN" value="pro${APP_NAME}" />
		<property name="PRODUCCION_APPLICATION" value="app" />
		<property name="PRODUCCION_LOGSTASH_APPLICATION" value="logstash" />
		
		<property name="PREPRODUCCION_PRIVATE_KEY" value="${SSH_KEYS_FOLDER}/pre_rsa" />
		<property name="PREPRODUCCION_DOMAIN" value="pre${APP_NAME}" />
		<property name="PREPRODUCCION_APPLICATION" value="app" />
		<property name="PREPRODUCCION_LOGSTASH_APPLICATION" value="logstash" />
		
		<property name="PRUEBAS_PRIVATE_KEY" value="${SSH_KEYS_FOLDER}/pru_rsa" />
		<property name="PRUEBAS_DOMAIN" value="pru${APP_NAME}" />
		<property name="PRUEBAS_APPLICATION" value="app" />
		<property name="PRUEBAS_LOGSTASH_APPLICATION" value="logstash" />
		
		
		<property name="DESARROLLO_PRIVATE_KEY" value="${SSH_KEYS_FOLDER}/dev_rsa" />
		<property name="DESARROLLO_PUBLIC_KEY" value="${DESARROLLO_PRIVATE_KEY}.pub" />
		<property name="DESARROLLO_DOMAIN" value="dev${APP_NAME}" />
		<property name="JENKINS_APPLICATION" value="jenkins" />
		
		
		<property name="LOG_PRIVATE_KEY" value="${SSH_KEYS_FOLDER}/log_rsa" />
		<property name="LOG_PUBLIC_KEY" value="${LOG_PRIVATE_KEY}.pub" />
		<property name="LOG_DOMAIN" value="log${APP_NAME}" />	
		<property name="ELASTICSEARCH_APPLICATION" value="elasticsearch" />			
		<property name="KIBANA_APPLICATION" value="kibana" />	
		
    </target> 	
		
    <macrodef name="createserverapp">
        <attribute name="userName" />
        <attribute name="password"  />
        <attribute name="domainName"  />
        <attribute name="applicationName" />
		<attribute name="logapplicationName" />
        <attribute name="privateKeyFile"  />
        <sequential>
			<echo>Creando Servidor de Aplicaciones en la cuenta "@{userName}"  en dominio "@{domainName}" y nombre de applicacion "@{applicationName}"</echo>
			
			<echo>Borrando claves existentes</echo>
			<removeallpublickeys 
				userName="@{userName}" 
				password="@{password}"  
			/>
			
			<echo>Borrando dominios</echo>
			<destroyalldomains     
				userName="@{userName}" 
				password="@{password}" 
				force="true" 
			/>
			
			<echo>Creando en @{privateKeyFile} el par de calve publica/privada</echo>
			<createkeypair     
				privateKeyFile="@{privateKeyFile}"
			/>
			
			<echo>Anyadiendo las calve publicas a la cuenta de Openshift</echo>
			<addpublickey     
				userName="@{userName}" 
				password="@{password}" 
				publicKeyName="ant" 
				publicKeyFile="@{privateKeyFile}.pub"
			/>
			
			<echo>Creando el dominio @{domainName}</echo>
			<createdomain     
				userName="@{userName}" 
				password="@{password}" 
				domainName="@{domainName}" 
				
			/>
			
			<echo>Creando la aplicacion @{applicationName}</echo>
			<createapplication     
				userName="@{userName}" 
				password="@{password}" 
				domainName="@{domainName}" 
				applicationName="@{applicationName}"  
				cartridgeName="jbossews-2.0"
				gearProfileName="small"
				scalable="true"
			/>
			
			<addenvironmentvariable     
				userName="@{userName}" 
				password="@{password}" 
				domainName="@{domainName}" 
				applicationName="@{applicationName}"  
				environmentVariableName="OPENSHIFT_MYSQL_LOWER_CASE_TABLE_NAMES" 
				environmentVariableValue="1"
			/>			
			
			<echo>Anyadiendo Base de datos</echo>
			<addcartridge     
				userName="@{userName}" 
				password="@{password}" 
				domainName="@{domainName}" 
				applicationName="@{applicationName}"  
				cartridgeName="mysql-5.5" 
			/>

			<echo>Creando servidor de log</echo>
			<createapplication     
				userName="@{userName}" 
				password="@{password}" 
				domainName="@{domainName}" 
				applicationName="@{logapplicationName}"  
				cartridgeName="diy-0.1"
				gearProfileName="small"
				scalable="false"
			/>

			<echo>Finalizado la creacion del servidor de aplicaciones</echo>
			
        </sequential>
    </macrodef> 
	
    <macrodef name="configureserver">
        <attribute name="userName" />
        <attribute name="password"  />
        <attribute name="domainName"  />
        <attribute name="applicationName" />
		<attribute name="gitrepository" />
        <attribute name="privateKeyFile"  />
		<element name="precommit" optional="yes" implicit="true"  />
        <sequential>	
			<echo>configurando servidor desde repositorio git en la cuenta "@{userName}"  en dominio "@{domainName}" y nombre de applicacion "@{applicationName}"</echo>	
			<echo>repositorio git:@{gitrepository}</echo>
		
			<property name="LOCAL_PATH_GIT" value="${env.TMP}/${APP_NAME}/@{domainName}/@{applicationName}" />
			<echo>Directorio local del repositorio:${LOCAL_PATH_GIT}</echo>
		
			<echo>Borrando los ficheros que pudiera haber en el directorio local</echo>
			<delete  includeEmptyDirs="true" failonerror="false" >
			  <fileset defaultexcludes="no"  dir="${LOCAL_PATH_GIT}" includes="**/*"/>
			</delete>	
			<mkdir dir="${LOCAL_PATH_GIT}" />
		
			<echo>Clonando repositorio git del servidor en OpenShift</echo>
			<gitcloneapplication     
				userName="@{userName}" 
				password="@{password}" 
				domainName="@{domainName}" 
				applicationName="@{applicationName}"  
				privateKeyFile="@{privateKeyFile}"
				path="${LOCAL_PATH_GIT}"
			/>

			
			<git 
				command="remote" 
				options="add upstream -m master @{gitrepository}"
				dir="${LOCAL_PATH_GIT}"
			/>
		
			<echo>Pull del repositorio remoto:@{gitrepository}</echo>
			<git 
				command="pull" 
				options="-s recursive -X theirs upstream master"
				dir="${LOCAL_PATH_GIT}"
			/>	
			
			<echo>Realizando tareas especificas de prepush</echo>
			<precommit />
			
			<git 
				command="commit" 
				options="-am nueva_sersion_de_la_app_"
				dir="${LOCAL_PATH_GIT}"
				failerror="false"
			/>
			
			<echo>Iniciando push a OpenShift</echo>
			<gitpushapplication     
				userName="@{userName}" 
				password="@{password}" 
				domainName="@{domainName}" 
				applicationName="@{applicationName}"  
				privateKeyFile="@{privateKeyFile}"
				path="${LOCAL_PATH_GIT}"
			/>

		
			<echo>Finalizado la configuracion del servidor</echo>
			
        </sequential>
    </macrodef> 
</project>
