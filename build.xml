<?xml version="1.0" encoding="UTF-8"?>
<project name="proyecto_software" default="create-domain" basedir=".">
    <description>Crea y configura todos los servidores de un proyecto de software en OpenShift</description>
    <import file="base.xml"/>


	<target name="create-domain" depends="-configureAnt">
		<echo>Vas a destruir toda la informacion de una cuenta de OpenShift</echo>
		<input
			message="Escribe el nombre del entorno en el que crees que estas:"
			validargs="PRODUCCION,PREPRODUCCION,PRUEBAS"
			addproperty="ENVIRONMENT_RESPONSE"
		/>	
		<if>
			<equals arg1="${ENVIRONMENT_RESPONSE}" arg2="${APP_ENVIRONMENT}" />
			<then>
				<createdomainandkeys 
					userName="${OPENSHIFT_LOGIN}" 
					password="${OPENSHIFT_PASSWORD}" 
					domainName="${DOMAIN}" 
					privateKeyFile="${PRIVATE_KEY}"
				/>
			</then>
			<else>
				<fail message="no estamos en ese entorno. Estamos en ${APP_ENVIRONMENT}"/>
			</else>
		</if>
		
		<antcall target="create-app-jenkins">
		</antcall>
		
		<antcall target="create-app-project">
		</antcall>		
	</target>

	<target name="create-app-jenkins" depends="-configureAnt">
		<createapplication     
			userName="${OPENSHIFT_LOGIN}" 
			password="${OPENSHIFT_PASSWORD}" 
			domainName="${DOMAIN}" 
			applicationName="${JENKINS}"  
			cartridgeName="jenkins"
			gearProfileName="small"
			scalable="false"
		/>
		
		<echo>AÃ±adiendo variable de entorno APP_ENVIRONMENT</echo>
		<addenvironmentvariable     
			userName="${OPENSHIFT_LOGIN}" 
			password="${OPENSHIFT_PASSWORD}" 
			domainName="${DOMAIN}" 
			applicationName="${JENKINS}"
			environmentVariableName="APP_ENVIRONMENT" 
			environmentVariableValue="${APP_ENVIRONMENT}"
		/>
		
		<antcall target="deploy-jenkins">
		</antcall>
	</target>

	<target name="deploy-jenkins" depends="-configureAnt">

		<jenkinspasswordhashproperty     
			name="JENKINS_PASSWORD_HASH" 
			password="${SERVICES_MASTER_PASSWORD}" 
		/>	
	
		<configureserver
			userName="${OPENSHIFT_LOGIN}" 
			password="${OPENSHIFT_PASSWORD}"  
			domainName="${DOMAIN}" 
			applicationName="${JENKINS}"
			privateKeyFile="${PRIVATE_KEY}"
			gitRepository="${GIT_REPOSITORY_JENKINS}"
		>
			<xmltask source="@{gitlocalpath}/.openshift/action_hooks/jenkins/system_builder/config.xml" dest="@{gitlocalpath}/.openshift/action_hooks/jenkins/system_builder/config.xml" failWithoutMatch="true">
				<insert path="//passwordHash" xml="${JENKINS_PASSWORD_HASH}" />
			</xmltask>		
		</configureserver>		
	
	</target>	
	
	
	<target name="create-app-project" depends="-configureAnt">
		<antcall target="backup-project">
		</antcall>
	
		<createprojectapplication	
			userName="${OPENSHIFT_LOGIN}" 
			password="${OPENSHIFT_PASSWORD}" 
			domainName="${DOMAIN}" 
			applicationName="${APPLICATION}" 
		/>
		
		<antcall target="restore-project">
		</antcall>
		
		<antcall target="deploy-project">
		</antcall>		
	</target>

	<target name="deploy-project" depends="-configureAnt">
		<configureserver
			userName="${OPENSHIFT_LOGIN}" 
			password="${OPENSHIFT_PASSWORD}"  
			domainName="${DOMAIN}" 
			applicationName="${APPLICATION}"
			privateKeyFile="${PRIVATE_KEY}"
			gitRepository="${GIT_REPOSITORY_APP}"
		>
			<copy file="../${PROJECT_NAME}/dist/${PROJECT_NAME}.war" tofile="@{gitlocalpath}/webapps/ROOT.war" overwrite="true" />	
		</configureserver>
	</target>
	
	<target name="backup-project" depends="-configureAnt">
		<property name="env.OPENSHIFT_DATA_DIR" value=".." />
		<property name="LOCAL_DIR_BACKUP" value="${env.OPENSHIFT_DATA_DIR}" />
		<property name="FILE_BACKUP" value="backup" />
		<tstamp>
			<format property="MES" pattern="MM"/>
			<format property="DIA_SEMANA" pattern="u"/>
		</tstamp>

		<property 
			name="FILE_MENSUAL" 
			value="${PROJECT_NAME}-${APP_ENVIRONMENT}-MES-${MES}-${FILE_BACKUP}.zip" 
		/>

		<property 
			name="FILE_DIARIO" 
			value="${PROJECT_NAME}-${APP_ENVIRONMENT}-DIA-${DIA_SEMANA}-${FILE_BACKUP}.zip" 
		/>
	
		<applicationproperty     
			userName="${OPENSHIFT_LOGIN}" 
			password="${OPENSHIFT_PASSWORD}"  
			domainName="${DOMAIN}" 
			applicationName="${APPLICATION}" 
			name="SSH_HOST" 
			applicationProperty="SSHHost"
		/>
		<applicationproperty     
			userName="${OPENSHIFT_LOGIN}" 
			password="${OPENSHIFT_PASSWORD}"  
			domainName="${DOMAIN}" 
			applicationName="${APPLICATION}"    
			name="SSH_USER" 
			applicationProperty="SSHUser"
		/>
		<applicationproperty     
			userName="${OPENSHIFT_LOGIN}" 
			password="${OPENSHIFT_PASSWORD}"  
			domainName="${DOMAIN}" 
			applicationName="${APPLICATION}" 
			name="SSH_PORT" 
			applicationProperty="SSHPort"
		/>


		<sshexec 
			host="${SSH_HOST}"
			username="${SSH_USER}"
			port="${SSH_PORT}"
			keyfile="${PRIVATE_KEY}"
			trust="true"
			command="mysqldump -u $OPENSHIFT_MYSQL_DB_USERNAME -p$OPENSHIFT_MYSQL_DB_PASSWORD -h $OPENSHIFT_MYSQL_DB_HOST -P $OPENSHIFT_MYSQL_DB_PORT $OPENSHIFT_APP_NAME > /tmp/${FILE_BACKUP}.sql"
		/>
		<sshexec 
			host="${SSH_HOST}"
			username="${SSH_USER}"
			port="${SSH_PORT}"
			keyfile="${PRIVATE_KEY}"
			trust="true"
			command="zip -j /tmp/${FILE_BACKUP}.zip /tmp/${FILE_BACKUP}.sql"
		/>
		<sshexec 
			host="${SSH_HOST}"
			username="${SSH_USER}"
			port="${SSH_PORT}"
			keyfile="${PRIVATE_KEY}"
			trust="true"
			command="rm /tmp/${FILE_BACKUP}.sql"
		/>		
		
		
		<scp
			port="${SSH_PORT}"
			keyfile="${PRIVATE_KEY}"
			trust="true"
			file="${SSH_USER}@${SSH_HOST}:/tmp/${FILE_BACKUP}.zip"
			todir="${LOCAL_DIR_BACKUP}"
		/>
		
		<sshexec 
			host="${SSH_HOST}"
			username="${SSH_USER}"
			port="${SSH_PORT}"
			keyfile="${PRIVATE_KEY}"
			trust="true"
			command="rm /tmp/${FILE_BACKUP}.zip"
		/>
				
		
		<move 
			file="${LOCAL_DIR_BACKUP}/${FILE_BACKUP}.zip" 
			tofile="${LOCAL_DIR_BACKUP}/${FILE_MENSUAL}" 
			overwrite="true"
		/>
		
		<echo>-------- Backup a ${FTP_BACKUP_HOST} del fichero:${FILE_MENSUAL} en entorno ${APP_ENVIRONMENT}</echo>
		<ftp 
			server="${FTP_BACKUP_HOST}"
			userid="${FTP_BACKUP_USER}"
			password="${FTP_BACKUP_PASSWORD}"
			remotedir="${FTP_BACKUP_ROOT_PATH}"
			passive="yes"
		>
			<fileset file="${LOCAL_DIR_BACKUP}/${FILE_MENSUAL}"/>
		</ftp>
		
		
		<move 
			file="${LOCAL_DIR_BACKUP}/${FILE_MENSUAL}" 
			tofile="${LOCAL_DIR_BACKUP}/${FILE_DIARIO}" 
			overwrite="true"
		/>
		
		<echo>-------- Backup a ${FTP_BACKUP_HOST} del fichero:${FILE_DIARIO} en entorno ${APP_ENVIRONMENT}</echo>
		<ftp 
			server="${FTP_BACKUP_HOST}"
			userid="${FTP_BACKUP_USER}"
			password="${FTP_BACKUP_PASSWORD}"
			remotedir="${FTP_BACKUP_ROOT_PATH}"
			passive="yes"
		>
			<fileset file="${LOCAL_DIR_BACKUP}/${FILE_DIARIO}"/>
		</ftp>
		
		<delete  
			file="${LOCAL_DIR_BACKUP}/${FILE_DIARIO}"
		/>
		
	</target>

	<target name="restore-project" depends="-configureAnt">
		<property name="env.OPENSHIFT_DATA_DIR" value=".." />
		<property name="LOCAL_DIR_BACKUP" value="${env.OPENSHIFT_DATA_DIR}" />
		<property name="FILE_BACKUP" value="backup" />
		<tstamp>
			<format property="MES" pattern="MM"/>
			<format property="DIA_SEMANA" pattern="u"/>
		</tstamp>

		<property name="RESTORE" value="DIA-${DIA_SEMANA}" />
		<property name="RESTORE_ENVIRONMENT" value="${APP_ENVIRONMENT}" />

		<if>
			<equals arg1="${APP_ENVIRONMENT}" arg2="PRODUCCION" />
			<then>
				<if>
					<equals arg1="${RESTORE_ENVIRONMENT}" arg2="PRODUCCION" />
					<then>
					</then>
					<else>
						<fail message="En el entorno de produccion solo se puede restaurar el entorno de produccion pero se pensaba restaurar: ${RESTORE_ENVIRONMENT} de ${RESTORE}"/>
					</else>
				</if>
			</then>
		</if>		
		
		
		
		<property 
			name="FILE_RESTORE" 
			value="${PROJECT_NAME}-${RESTORE_ENVIRONMENT}-${RESTORE}-${FILE_BACKUP}.zip" 
		/>
	
		<applicationproperty     
			userName="${OPENSHIFT_LOGIN}" 
			password="${OPENSHIFT_PASSWORD}"  
			domainName="${DOMAIN}" 
			applicationName="${APPLICATION}" 
			name="SSH_HOST" 
			applicationProperty="SSHHost"
		/>
		<applicationproperty     
			userName="${OPENSHIFT_LOGIN}" 
			password="${OPENSHIFT_PASSWORD}"  
			domainName="${DOMAIN}" 
			applicationName="${APPLICATION}"    
			name="SSH_USER" 
			applicationProperty="SSHUser"
		/>
		<applicationproperty     
			userName="${OPENSHIFT_LOGIN}" 
			password="${OPENSHIFT_PASSWORD}"  
			domainName="${DOMAIN}" 
			applicationName="${APPLICATION}" 
			name="SSH_PORT" 
			applicationProperty="SSHPort"
		/>
		
		<echo>Descargando desde ${FTP_BACKUP_HOST} el fichero:${FILE_RESTORE}</echo>
		<ftp 
			action="get"
			server="${FTP_BACKUP_HOST}"
			userid="${FTP_BACKUP_USER}"
			password="${FTP_BACKUP_PASSWORD}"
			remotedir="${FTP_BACKUP_ROOT_PATH}"
			passive="yes"
		>
			<fileset dir="${LOCAL_DIR_BACKUP}">
				<include name="${FILE_RESTORE}" />
			</fileset>		
		</ftp>		
		
		<scp
			port="${SSH_PORT}"
			keyfile="${PRIVATE_KEY}"
			trust="true"
			file="${LOCAL_DIR_BACKUP}/${FILE_RESTORE}"
			todir="${SSH_USER}@${SSH_HOST}:/tmp"
		/>
	
		<delete  
			file="${LOCAL_DIR_BACKUP}/${FILE_RESTORE}"
		/>	
	
		<sshexec 
			host="${SSH_HOST}"
			username="${SSH_USER}"
			port="${SSH_PORT}"
			keyfile="${PRIVATE_KEY}"
			trust="true"
			command="cd /tmp &amp;&amp; unzip -o /tmp/${FILE_RESTORE} "
		/>
	
		<sshexec 
			host="${SSH_HOST}"
			username="${SSH_USER}"
			port="${SSH_PORT}"
			keyfile="${PRIVATE_KEY}"
			trust="true"
			command="rm /tmp/${FILE_RESTORE}"
		/>
	
		<echo>-------- Restaurando fichero ${FILE_RESTORE} en el entorno de ${APP_ENVIRONMENT}</echo>
		<sshexec 
			host="${SSH_HOST}"
			username="${SSH_USER}"
			port="${SSH_PORT}"
			keyfile="${PRIVATE_KEY}"
			trust="true"
			command="mysql -u $OPENSHIFT_MYSQL_DB_USERNAME -p$OPENSHIFT_MYSQL_DB_PASSWORD -h $OPENSHIFT_MYSQL_DB_HOST -P $OPENSHIFT_MYSQL_DB_PORT $OPENSHIFT_APP_NAME &lt; /tmp/${FILE_BACKUP}.sql"
		/>
	
		<sshexec 
			host="${SSH_HOST}"
			username="${SSH_USER}"
			port="${SSH_PORT}"
			keyfile="${PRIVATE_KEY}"
			trust="true"
			command="rm /tmp/${FILE_BACKUP}.sql"
		/>
	
		<restartapplication 
			userName="${OPENSHIFT_LOGIN}" 
			password="${OPENSHIFT_PASSWORD}" 
			domainName="${DOMAIN}" 
			applicationName="${APPLICATION}" 
		/>
	
	</target>

	<target name="restart-project" depends="-configureAnt">
		<restartapplication 
			userName="${OPENSHIFT_LOGIN}" 
			password="${OPENSHIFT_PASSWORD}" 
			domainName="${DOMAIN}" 
			applicationName="${APPLICATION}" 
		/>	
	</target>
	<target name="restart-jenkins" depends="-configureAnt">
		<restartapplication 
			userName="${OPENSHIFT_LOGIN}" 
			password="${OPENSHIFT_PASSWORD}" 
			domainName="${DOMAIN}" 
			applicationName="${JENKINS}" 
		/>	
	</target>	
	
	
	
	<target name="show-info" depends="-configureAnt">
		<!-- InformaciÃ³n de OpenShift sobre las 2 aplicaciones -->

		<applicationproperty     
			userName="${OPENSHIFT_LOGIN}" 
			password="${OPENSHIFT_PASSWORD}" 
			domainName="${DOMAIN}" 
			applicationName="${APPLICATION}"  
			name="SSH_PROJECT_URL" 
			applicationProperty="SshUrl"
		/>

		<applicationproperty     
			userName="${OPENSHIFT_LOGIN}" 
			password="${OPENSHIFT_PASSWORD}" 
			domainName="${DOMAIN}" 
			applicationName="${APPLICATION}"  
			name="GIT_PROJECT_URL" 
			applicationProperty="GitUrl"
		/>
		
		<applicationproperty     
			userName="${OPENSHIFT_LOGIN}" 
			password="${OPENSHIFT_PASSWORD}" 
			domainName="${DOMAIN}" 
			applicationName="${JENKINS}"  
			name="SSH_JENKINS_URL" 
			applicationProperty="SshUrl"
		/>
		
		<applicationproperty     
			userName="${OPENSHIFT_LOGIN}" 
			password="${OPENSHIFT_PASSWORD}" 
			domainName="${DOMAIN}" 
			applicationName="${JENKINS}"  
			name="GIT_JENKINS_URL" 
			applicationProperty="GitUrl"
		/>
		
		<echo>SSH URL del domino ${DOMAIN} en aplicacion ${APPLICATION}</echo>
		<echo>${SSH_PROJECT_URL}</echo>		
		<echo>Git URL del domino ${DOMAIN} en aplicacion ${APPLICATION}</echo>
		<echo>${GIT_PROJECT_URL}</echo>		
		<echo>SSH URL del domino ${DOMAIN} en aplicacion ${JENKINS}</echo>
		<echo>${SSH_JENKINS_URL}</echo>		
		<echo>Git URL del domino ${DOMAIN} en aplicacion ${JENKINS}</echo>
		<echo>${GIT_JENKINS_URL}</echo>		
		
		<remote-exec   
			userName="${OPENSHIFT_LOGIN}" 
			password="${OPENSHIFT_PASSWORD}" 
			domainName="${DOMAIN}" 
			applicationName="${JENKINS}" 
			privateKeyFile="${PRIVATE_KEY}"
			cmd="echo usuario:$JENKINS_USERNAME"
		/>
		
	</target>	

	
	<target name="view-log" depends="-configureAnt">
	
	
<!--	
catalina
host-manager
localhost
manager
localhost_access_log






haproxy
haproxy_ctld
jbossews
newrelic
	-->
	
		<remote-exec 
			userName="${OPENSHIFT_LOGIN}" 
			password="${OPENSHIFT_PASSWORD}"  
			domainName="${DOMAIN}" 
			applicationName="${APPLICATION}"
			privateKeyFile="${PRIVATE_KEY}"
			cmd="cat $OPENSHIFT_JBOSSEWS_DIR/logs/catalina.2014-04-12.log"
		/>	
	</target>
	<target name="show-log-files" depends="-configureAnt">
		<remote-exec 
			userName="${OPENSHIFT_LOGIN}" 
			password="${OPENSHIFT_PASSWORD}"  
			domainName="${DOMAIN}" 
			applicationName="${APPLICATION}"
			privateKeyFile="${PRIVATE_KEY}"
			cmd="ls -l $OPENSHIFT_JBOSSEWS_DIR/logs"
		/>	
	</target>
	<target name="show-env-project" depends="-configureAnt">
		<remote-exec 
			userName="${OPENSHIFT_LOGIN}" 
			password="${OPENSHIFT_PASSWORD}"  
			domainName="${DOMAIN}" 
			applicationName="${APPLICATION}"
			privateKeyFile="${PRIVATE_KEY}"
			cmd="env | sort"
		/>	
	</target>	
	<target name="show-env-jenkins" depends="-configureAnt">
		<addenvironmentvariable     
			userName="${OPENSHIFT_LOGIN}" 
			password="${OPENSHIFT_PASSWORD}" 
			domainName="${DOMAIN}" 
			applicationName="${JENKINS}"
			environmentVariableName="APP_ENVIRONMENT" 
			environmentVariableValue="${APP_ENVIRONMENT}"
		/>	
	
		<remote-exec 
			userName="${OPENSHIFT_LOGIN}" 
			password="${OPENSHIFT_PASSWORD}"  
			domainName="${DOMAIN}" 
			applicationName="${JENKINS}"
			privateKeyFile="${PRIVATE_KEY}"
			cmd="env | sort"
		/>	
	</target>
</project>