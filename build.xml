<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:props="antlib:org.apache.ant.props"  name="proyecto_software" default="default" basedir="." >
    <description>Crea y configura todos los servidores de un proyecto de software en OpenShift</description>
	
	<propertyhelper>
		<props:nested />
	</propertyhelper>
	
    <import file="base.xml"/>
	
	
	<target name="default" depends="-configureAnt,create-domain,create-app-jenkins,deploy-jenkins,create-app-project-no-backup">
	</target>
	

	
	<target name="create-domain" depends="-configureAnt">
		<echo>Vas a destruir toda la informacion de una cuenta de OpenShift</echo>
		<input
			message="Escribe el nombre del entorno en el que crees que estas:"
			validargs="PRODUCCION,PREPRODUCCION,PRUEBAS"
			addproperty="ENVIRONMENT_RESPONSE"
		/>	
		<if>
			<equals arg1="${ENVIRONMENT_RESPONSE}" arg2="${APP_ENVIRONMENT}" />
			<then>			
				<createdomainandkeys 
					serverUrl="${OPENSHIFT_SERVER_URL}"
					userName="${OPENSHIFT_LOGIN}" 
					password="${OPENSHIFT_PASSWORD}" 
					domainName="${DOMAIN}" 
					privateKeyFile="${PRIVATE_KEY}"
				/>
			</then>
			<else>
				<fail message="no estamos en ese entorno. Estamos en ${APP_ENVIRONMENT}"/>
			</else>
		</if>
	
	</target>
	<target name="addallalias" depends="-configureAnt" >

		<echo>Borrando todos los alias</echo>
		
		<removeallalias 
			serverUrl="${OPENSHIFT_SERVER_URL}"		
			userName="${OPENSHIFT_LOGIN}" 
			password="${OPENSHIFT_PASSWORD}" 
			domainName="${DOMAIN}" 
			applicationName="${APPLICATION}" 
		/>

		<if>
			<length string="${DOMAIN_NAME_1}" trim="true" when="greater" length="0" />
			<then>
				<echo>Anyadiendo alias ${DOMAIN_NAME_1}</echo>
				<addalias 
					serverUrl="${OPENSHIFT_SERVER_URL}"	
					userName="${OPENSHIFT_LOGIN}" 
					password="${OPENSHIFT_PASSWORD}" 
					domainName="${DOMAIN}" 
					applicationName="${APPLICATION}" 
					alias="${DOMAIN_NAME_1}"
				/>		
			</then>
		</if>
		<if>
			<length string="${DOMAIN_NAME_2}" trim="true" when="greater" length="0" />
			<then>
				<echo>Anyadiendo alias ${DOMAIN_NAME_2}</echo>
				<addalias 
					serverUrl="${OPENSHIFT_SERVER_URL}"	
					userName="${OPENSHIFT_LOGIN}" 
					password="${OPENSHIFT_PASSWORD}" 
					domainName="${DOMAIN}" 
					applicationName="${APPLICATION}" 
					alias="${DOMAIN_NAME_2}"
				/>		
					
			</then>
		</if>	
		<if>
			<length string="${DOMAIN_NAME_3}" trim="true" when="greater" length="0" />
			<then>
				<echo>Anyadiendo alias ${DOMAIN_NAME_3}</echo>		
				<addalias 
					serverUrl="${OPENSHIFT_SERVER_URL}"	
					userName="${OPENSHIFT_LOGIN}" 
					password="${OPENSHIFT_PASSWORD}" 
					domainName="${DOMAIN}" 
					applicationName="${APPLICATION}" 
					alias="${DOMAIN_NAME_3}"
				/>						
			</then>
		</if>
		<if>
			<length string="${DOMAIN_NAME_4}" trim="true" when="greater" length="0" />
			<then>
				<echo>Anyadiendo alias ${DOMAIN_NAME_4}</echo>	
				<addalias 
					serverUrl="${OPENSHIFT_SERVER_URL}"	
					userName="${OPENSHIFT_LOGIN}" 
					password="${OPENSHIFT_PASSWORD}" 
					domainName="${DOMAIN}" 
					applicationName="${APPLICATION}" 
					alias="${DOMAIN_NAME_4}"
				/>					
			</then>
		</if>		
	</target>	

				

	
	<target name="create-app-jenkins" depends="-configureAnt">
		<trycatch property="exception" >
			<try>
				<destroyapplication  
					serverUrl="${OPENSHIFT_SERVER_URL}"	
					userName="${OPENSHIFT_LOGIN}" 
					password="${OPENSHIFT_PASSWORD}" 
					domainName="${DOMAIN}" 
					applicationName="${JENKINS}"  
				/>
			</try>
			<catch>
				<echo>No se pudo borrar la aplicación ${JENKINS}</echo>
			</catch>
		</trycatch>	
	
		<createapplication     
			serverUrl="${OPENSHIFT_SERVER_URL}"	
			userName="${OPENSHIFT_LOGIN}" 
			password="${OPENSHIFT_PASSWORD}" 
			domainName="${DOMAIN}" 
			applicationName="${JENKINS}"  
			cartridgeName="jenkins"
			gearProfileName="small"
			scalable="false"
		/>
		
		<echo>Añadiendo variable de entorno APP_ENVIRONMENT</echo>
		<addenvironmentvariable  
			serverUrl="${OPENSHIFT_SERVER_URL}"	
			userName="${OPENSHIFT_LOGIN}" 
			password="${OPENSHIFT_PASSWORD}" 
			domainName="${DOMAIN}" 
			applicationName="${JENKINS}"
			environmentVariableName="APP_ENVIRONMENT" 
			environmentVariableValue="${APP_ENVIRONMENT}"
		/>
		
		<jenkinspasswordhashproperty     
			name="JENKINS_PASSWORD_HASH" 
			password="${SERVICES_MASTER_PASSWORD}" 
		/>	
		
		<echo>Añadiendo variable de entorno JENKINS_PASSWORD_HASH</echo>
		<addenvironmentvariable 
			serverUrl="${OPENSHIFT_SERVER_URL}"	
			userName="${OPENSHIFT_LOGIN}" 
			password="${OPENSHIFT_PASSWORD}" 
			domainName="${DOMAIN}" 
			applicationName="${JENKINS}"
			environmentVariableName="JENKINS_PASSWORD_HASH" 
			environmentVariableValue="${JENKINS_PASSWORD_HASH}"
		/>
		<echo>Añadiendo variable de entorno SERVICES_MASTER_EMAIL</echo>
		<addenvironmentvariable   
			serverUrl="${OPENSHIFT_SERVER_URL}"	
			userName="${OPENSHIFT_LOGIN}" 
			password="${OPENSHIFT_PASSWORD}" 
			domainName="${DOMAIN}" 
			applicationName="${JENKINS}"
			environmentVariableName="SERVICES_MASTER_EMAIL" 
			environmentVariableValue="${SERVICES_MASTER_EMAIL}"
		/>
		<echo>Añadiendo variable de entorno SERVICES_MASTER_PASSWORD</echo>
		<addenvironmentvariable  
			serverUrl="${OPENSHIFT_SERVER_URL}"	
			userName="${OPENSHIFT_LOGIN}" 
			password="${OPENSHIFT_PASSWORD}" 
			domainName="${DOMAIN}" 
			applicationName="${JENKINS}"
			environmentVariableName="SERVICES_MASTER_PASSWORD" 
			environmentVariableValue="${SERVICES_MASTER_PASSWORD}"
		/>

		<echo>Añadiendo variable de entorno GIT_REPOSITORY_PRIVATE</echo>
		<addenvironmentvariable  
			serverUrl="${OPENSHIFT_SERVER_URL}"	
			userName="${OPENSHIFT_LOGIN}" 
			password="${OPENSHIFT_PASSWORD}" 
			domainName="${DOMAIN}" 
			applicationName="${JENKINS}"
			environmentVariableName="GIT_REPOSITORY_PRIVATE" 
			environmentVariableValue="${GIT_REPOSITORY_PRIVATE}"
		/>	
		
		<echo>Añadiendo variable de entorno NEW_RELIC_LICENSE_KEY</echo>
		<addenvironmentvariable 
			serverUrl="${OPENSHIFT_SERVER_URL}"	
			userName="${OPENSHIFT_LOGIN}" 
			password="${OPENSHIFT_PASSWORD}" 
			domainName="${DOMAIN}" 
			applicationName="${JENKINS}"  
			environmentVariableName="NEW_RELIC_LICENSE_KEY" 
			environmentVariableValue="${NEW_RELIC_LICENSE_KEY}"
		/>
		<echo>Añadiendo variable de entorno JAVA_TOOL_OPTIONS</echo>
		<applicationproperty
			serverUrl="${OPENSHIFT_SERVER_URL}"	
			userName="${OPENSHIFT_LOGIN}" 
			password="${OPENSHIFT_PASSWORD}"  
			domainName="${DOMAIN}" 
			applicationName="${JENKINS}" 
			name="UUID" 
			applicationProperty="UUID"
		/>
		
		<addenvironmentvariable
			serverUrl="${OPENSHIFT_SERVER_URL}"	
			userName="${OPENSHIFT_LOGIN}" 
			password="${OPENSHIFT_PASSWORD}" 
			domainName="${DOMAIN}" 
			applicationName="${JENKINS}"
			environmentVariableName="JAVA_TOOL_OPTIONS" 
			environmentVariableValue="-javaagent:/var/lib/openshift/${UUID}/app-root/runtime/repo/.openshift/action_hooks/newrelic/newrelic.jar "
		/>
	</target>


	<target name="deploy-jenkins" depends="-configureAnt">
	
		<configureserver
			serverUrl="${OPENSHIFT_SERVER_URL}"	
			userName="${OPENSHIFT_LOGIN}" 
			password="${OPENSHIFT_PASSWORD}"  
			domainName="${DOMAIN}" 
			applicationName="${JENKINS}"
			privateKeyFile="${PRIVATE_KEY}"
			gitRepository="${GIT_REPOSITORY_JENKINS}"
		>		
			
		    <foreach target="-set-git-source-code-environment-variable" param="i" list="1,2,3,4,5,6,7,8,9" inheritall="true" inheritrefs="true" />	
		</configureserver>	
		

		
		<stopapplication   
			serverUrl="${OPENSHIFT_SERVER_URL}"	
			userName="${OPENSHIFT_LOGIN}" 
			password="${OPENSHIFT_PASSWORD}" 
			domainName="${DOMAIN}" 
			applicationName="${JENKINS}" 
		/>
		<startapplication  
			serverUrl="${OPENSHIFT_SERVER_URL}"	
			userName="${OPENSHIFT_LOGIN}" 
			password="${OPENSHIFT_PASSWORD}" 
			domainName="${DOMAIN}" 
			applicationName="${JENKINS}" 
		/>		
		
		
	</target>	
	
	<target name="-set-git-source-code-environment-variable">
		<if>
		 <equals arg1="${GIT_REPOSITORY_SOURCE_CODE_${i}}" arg2="" />
		 <then>
		   <echo message="La variable GIT_REPOSITORY_SOURCE_CODE_${i} no tiene valor" />
		 </then>
		 <else>
					<addenvironmentvariable  
						serverUrl="${OPENSHIFT_SERVER_URL}"	
						userName="${OPENSHIFT_LOGIN}" 
						password="${OPENSHIFT_PASSWORD}" 
						domainName="${DOMAIN}" 
						applicationName="${JENKINS}"
						environmentVariableName="GIT_REPOSITORY_SOURCE_CODE_${i}" 
						environmentVariableValue="${GIT_REPOSITORY_SOURCE_CODE_${i}}"
					/>
		 </else>
		</if>
		<if>
		 <equals arg1="${TARGET_DIR_REPOSITORY_SOURCE_CODE_${i}}" arg2="" />
		 <then>
		   <echo message="La variable TARGET_DIR_REPOSITORY_SOURCE_CODE_${i} no tiene valor" />
		 </then>
		 <else>
			<addenvironmentvariable   
				serverUrl="${OPENSHIFT_SERVER_URL}"	
				userName="${OPENSHIFT_LOGIN}" 
				password="${OPENSHIFT_PASSWORD}" 
				domainName="${DOMAIN}" 
				applicationName="${JENKINS}"
				environmentVariableName="TARGET_DIR_REPOSITORY_SOURCE_CODE_${i}" 
				environmentVariableValue="${TARGET_DIR_REPOSITORY_SOURCE_CODE_${i}}"
			/>		
		 </else>
		</if>
	</target>	
		
	<target name="create-app-project-no-backup" depends="-configureAnt">
	
		<createprojectapplication
			serverUrl="${OPENSHIFT_SERVER_URL}"	
			userName="${OPENSHIFT_LOGIN}" 
			password="${OPENSHIFT_PASSWORD}" 
			domainName="${DOMAIN}" 
			applicationName="${APPLICATION}" 
			gearProfileName="${APP_GEAR_PROFILE_NAME}"
		/>
		<antcall target="addallalias">
		</antcall>	
			
	</target>
	
	<target name="create-app-project" depends="-configureAnt">
		<antcall target="backup-project">
		</antcall>
	
		<antcall target="create-app-project-no-backup">
		</antcall>
	
		<antcall target="restore-project">
		</antcall>
			
	</target>

	<target name="delete-create-database-project" depends="-configureAnt">
		<antcall target="backup-project">
		</antcall>
	
		<deletecreatedatabase	
			serverUrl="${OPENSHIFT_SERVER_URL}"	
			userName="${OPENSHIFT_LOGIN}" 
			password="${OPENSHIFT_PASSWORD}" 
			domainName="${DOMAIN}" 
			applicationName="${APPLICATION}" 
		/>
	
			
	</target>	
	
	<target name="deploy-project" depends="-configureAnt">
		<configureserver
			serverUrl="${OPENSHIFT_SERVER_URL}"	
			userName="${OPENSHIFT_LOGIN}" 
			password="${OPENSHIFT_PASSWORD}"  
			domainName="${DOMAIN}" 
			applicationName="${APPLICATION}"
			privateKeyFile="${PRIVATE_KEY}"
			gitRepository="${GIT_REPOSITORY_APP}"
		>
			<copy file="../${TARGET_DIR_REPOSITORY_SOURCE_CODE_1}/dist/${PROJECT_NAME}.war" tofile="@{gitlocalpath}/webapps/ROOT.war" overwrite="true" />	
		</configureserver>
	</target>
	
	<target name="backup-project" depends="-configureAnt">
		<property name="env.OPENSHIFT_DATA_DIR" value=".." />
		<property name="LOCAL_DIR_BACKUP" value="${env.OPENSHIFT_DATA_DIR}" />
		<property name="FILE_BACKUP" value="backup" />
		<tstamp>
			<format property="MES" pattern="MM"/>
			<format property="DIA_SEMANA" pattern="u"/>
		</tstamp>

		<property 
			name="FILE_MENSUAL" 
			value="${PROJECT_NAME}-${APP_ENVIRONMENT}-MES-${MES}-${FILE_BACKUP}.zip" 
		/>

		<property 
			name="FILE_DIARIO" 
			value="${PROJECT_NAME}-${APP_ENVIRONMENT}-DIA-${DIA_SEMANA}-${FILE_BACKUP}.zip" 
		/>
	
		<applicationproperty   
			serverUrl="${OPENSHIFT_SERVER_URL}"	
			userName="${OPENSHIFT_LOGIN}" 
			password="${OPENSHIFT_PASSWORD}"  
			domainName="${DOMAIN}" 
			applicationName="${APPLICATION}" 
			name="SSH_HOST" 
			applicationProperty="SSHHost"
		/>
		<applicationproperty  
			serverUrl="${OPENSHIFT_SERVER_URL}"	
			userName="${OPENSHIFT_LOGIN}" 
			password="${OPENSHIFT_PASSWORD}"  
			domainName="${DOMAIN}" 
			applicationName="${APPLICATION}"    
			name="SSH_USER" 
			applicationProperty="SSHUser"
		/>
		<applicationproperty   
			serverUrl="${OPENSHIFT_SERVER_URL}"	
			userName="${OPENSHIFT_LOGIN}" 
			password="${OPENSHIFT_PASSWORD}"  
			domainName="${DOMAIN}" 
			applicationName="${APPLICATION}" 
			name="SSH_PORT" 
			applicationProperty="SSHPort"
		/>


		<sshexec 
			host="${SSH_HOST}"
			username="${SSH_USER}"
			port="${SSH_PORT}"
			keyfile="${PRIVATE_KEY}"
			trust="true"
			command="mysqldump -u $OPENSHIFT_MYSQL_DB_USERNAME -p$OPENSHIFT_MYSQL_DB_PASSWORD -h $OPENSHIFT_MYSQL_DB_HOST -P $OPENSHIFT_MYSQL_DB_PORT $OPENSHIFT_APP_NAME > /tmp/${FILE_BACKUP}.sql"
		/>
		<sshexec 
			host="${SSH_HOST}"
			username="${SSH_USER}"
			port="${SSH_PORT}"
			keyfile="${PRIVATE_KEY}"
			trust="true"
			command="zip -j /tmp/${FILE_BACKUP}.zip /tmp/${FILE_BACKUP}.sql"
		/>
		<sshexec 
			host="${SSH_HOST}"
			username="${SSH_USER}"
			port="${SSH_PORT}"
			keyfile="${PRIVATE_KEY}"
			trust="true"
			command="rm /tmp/${FILE_BACKUP}.sql"
		/>		
		
		
		<scp
			port="${SSH_PORT}"
			keyfile="${PRIVATE_KEY}"
			trust="true"
			file="${SSH_USER}@${SSH_HOST}:/tmp/${FILE_BACKUP}.zip"
			todir="${LOCAL_DIR_BACKUP}"
		/>
		
		<sshexec 
			host="${SSH_HOST}"
			username="${SSH_USER}"
			port="${SSH_PORT}"
			keyfile="${PRIVATE_KEY}"
			trust="true"
			command="rm /tmp/${FILE_BACKUP}.zip"
		/>
				
		
		<move 
			file="${LOCAL_DIR_BACKUP}/${FILE_BACKUP}.zip" 
			tofile="${LOCAL_DIR_BACKUP}/${FILE_MENSUAL}" 
			overwrite="true"
		/>
		
		<echo>-------- Backup a ${FTP_BACKUP_HOST} del fichero:${FILE_MENSUAL} en entorno ${APP_ENVIRONMENT}</echo>
		<ftp 
			server="${FTP_BACKUP_HOST}"
			userid="${FTP_BACKUP_USER}"
			password="${FTP_BACKUP_PASSWORD}"
			remotedir="${FTP_BACKUP_ROOT_PATH}"
			passive="yes"
			retriesAllowed="10"
		>
			<fileset file="${LOCAL_DIR_BACKUP}/${FILE_MENSUAL}"/>
		</ftp>
		
		
		<move 
			file="${LOCAL_DIR_BACKUP}/${FILE_MENSUAL}" 
			tofile="${LOCAL_DIR_BACKUP}/${FILE_DIARIO}" 
			overwrite="true"
		/>
		
		<echo>-------- Backup a ${FTP_BACKUP_HOST} del fichero:${FILE_DIARIO} en entorno ${APP_ENVIRONMENT}</echo>
		<ftp 
			server="${FTP_BACKUP_HOST}"
			userid="${FTP_BACKUP_USER}"
			password="${FTP_BACKUP_PASSWORD}"
			remotedir="${FTP_BACKUP_ROOT_PATH}"
			passive="yes"
			retriesAllowed="10"
		>
			<fileset file="${LOCAL_DIR_BACKUP}/${FILE_DIARIO}"/>
		</ftp>
		
		<delete  
			file="${LOCAL_DIR_BACKUP}/${FILE_DIARIO}"
		/>
		
	</target>

	<target name="restore-project" depends="-configureAnt">
		<property name="env.OPENSHIFT_DATA_DIR" value=".." />
		<property name="LOCAL_DIR_BACKUP" value="${env.OPENSHIFT_DATA_DIR}" />
		<property name="FILE_BACKUP" value="backup" />
		<tstamp>
			<format property="MES" pattern="MM"/>
			<format property="DIA_SEMANA" pattern="u"/>
		</tstamp>

		<property name="RESTORE" value="DIA-${DIA_SEMANA}" />
		<property name="RESTORE_ENVIRONMENT" value="${APP_ENVIRONMENT}" />

		<if>
			<equals arg1="${APP_ENVIRONMENT}" arg2="PRODUCCION" />
			<then>
				<if>
					<equals arg1="${RESTORE_ENVIRONMENT}" arg2="PRODUCCION" />
					<then>
					</then>
					<else>
						<fail message="En el entorno de produccion solo se puede restaurar el entorno de produccion pero se pensaba restaurar: ${RESTORE_ENVIRONMENT} de ${RESTORE}"/>
					</else>
				</if>
			</then>
		</if>		
		
		
		
		<property 
			name="FILE_RESTORE" 
			value="${PROJECT_NAME}-${RESTORE_ENVIRONMENT}-${RESTORE}-${FILE_BACKUP}.zip" 
		/>
	
		<applicationproperty     
			serverUrl="${OPENSHIFT_SERVER_URL}"	
			userName="${OPENSHIFT_LOGIN}" 
			password="${OPENSHIFT_PASSWORD}"  
			domainName="${DOMAIN}" 
			applicationName="${APPLICATION}" 
			name="SSH_HOST" 
			applicationProperty="SSHHost"
		/>
		<applicationproperty   
			serverUrl="${OPENSHIFT_SERVER_URL}"	
			userName="${OPENSHIFT_LOGIN}" 
			password="${OPENSHIFT_PASSWORD}"  
			domainName="${DOMAIN}" 
			applicationName="${APPLICATION}"    
			name="SSH_USER" 
			applicationProperty="SSHUser"
		/>
		<applicationproperty 
			serverUrl="${OPENSHIFT_SERVER_URL}"	
			userName="${OPENSHIFT_LOGIN}" 
			password="${OPENSHIFT_PASSWORD}"  
			domainName="${DOMAIN}" 
			applicationName="${APPLICATION}" 
			name="SSH_PORT" 
			applicationProperty="SSHPort"
		/>
		
		<echo>Descargando desde ${FTP_BACKUP_HOST} el fichero:${FILE_RESTORE}</echo>
		<ftp 
			action="get"
			server="${FTP_BACKUP_HOST}"
			userid="${FTP_BACKUP_USER}"
			password="${FTP_BACKUP_PASSWORD}"
			remotedir="${FTP_BACKUP_ROOT_PATH}"
			passive="yes"
		>
			<fileset dir="${LOCAL_DIR_BACKUP}">
				<include name="${FILE_RESTORE}" />
			</fileset>		
		</ftp>		
		
		<scp
			port="${SSH_PORT}"
			keyfile="${PRIVATE_KEY}"
			trust="true"
			file="${LOCAL_DIR_BACKUP}/${FILE_RESTORE}"
			todir="${SSH_USER}@${SSH_HOST}:/tmp"
		/>
	
		<delete  
			file="${LOCAL_DIR_BACKUP}/${FILE_RESTORE}"
		/>	
	
		<sshexec 
			host="${SSH_HOST}"
			username="${SSH_USER}"
			port="${SSH_PORT}"
			keyfile="${PRIVATE_KEY}"
			trust="true"
			command="cd /tmp &amp;&amp; unzip -o /tmp/${FILE_RESTORE} "
		/>
	
		<sshexec 
			host="${SSH_HOST}"
			username="${SSH_USER}"
			port="${SSH_PORT}"
			keyfile="${PRIVATE_KEY}"
			trust="true"
			command="rm /tmp/${FILE_RESTORE}"
		/>
	
		<echo>-------- Restaurando fichero ${FILE_RESTORE} en el entorno de ${APP_ENVIRONMENT}</echo>
		<sshexec 
			host="${SSH_HOST}"
			username="${SSH_USER}"
			port="${SSH_PORT}"
			keyfile="${PRIVATE_KEY}"
			trust="true"
			command="mysql -u $OPENSHIFT_MYSQL_DB_USERNAME -p$OPENSHIFT_MYSQL_DB_PASSWORD -h $OPENSHIFT_MYSQL_DB_HOST -P $OPENSHIFT_MYSQL_DB_PORT $OPENSHIFT_APP_NAME &lt; /tmp/${FILE_BACKUP}.sql"
		/>
	
		<sshexec 
			host="${SSH_HOST}"
			username="${SSH_USER}"
			port="${SSH_PORT}"
			keyfile="${PRIVATE_KEY}"
			trust="true"
			command="rm /tmp/${FILE_BACKUP}.sql"
		/>
	
	
		<stopapplication  
			serverUrl="${OPENSHIFT_SERVER_URL}"	
			userName="${OPENSHIFT_LOGIN}" 
			password="${OPENSHIFT_PASSWORD}" 
			domainName="${DOMAIN}" 
			applicationName="${APPLICATION}" 
		/>
		<startapplication  
			serverUrl="${OPENSHIFT_SERVER_URL}"	
			userName="${OPENSHIFT_LOGIN}" 
			password="${OPENSHIFT_PASSWORD}" 
			domainName="${DOMAIN}" 
			applicationName="${APPLICATION}" 
		/>
		
	
	</target>

	<target name="create-app-sonar" depends="-configureAnt">
		<trycatch property="exception" >
			<try>
				<destroyapplication  
					serverUrl="${OPENSHIFT_SERVER_URL}"	
					userName="${OPENSHIFT_LOGIN}" 
					password="${OPENSHIFT_PASSWORD}" 
					domainName="${DOMAIN}" 
					applicationName="${SONAR}"  
				/>
			</try>
			<catch>
				<echo>No se pudo borrar la aplicación ${SONAR}</echo>
			</catch>
		</trycatch>	

		<createpsonarapplication     
			serverUrl="${OPENSHIFT_SERVER_URL}"	
			userName="${OPENSHIFT_LOGIN}" 
			password="${OPENSHIFT_PASSWORD}" 
			domainName="${DOMAIN}" 
			applicationName="${SONAR}"  
			gearProfileName="small"

		/>
		
		<echo>Añadiendo variable de entorno APP_ENVIRONMENT</echo>
		<addenvironmentvariable  
			serverUrl="${OPENSHIFT_SERVER_URL}"	
			userName="${OPENSHIFT_LOGIN}" 
			password="${OPENSHIFT_PASSWORD}" 
			domainName="${DOMAIN}" 
			applicationName="${JENKINS}"
			environmentVariableName="APP_ENVIRONMENT" 
			environmentVariableValue="${APP_ENVIRONMENT}"
		/>
		
	</target>	
	
	<target name="deploy-sonar" depends="-configureAnt">
	
		<configureserver
			serverUrl="${OPENSHIFT_SERVER_URL}"	
			userName="${OPENSHIFT_LOGIN}" 
			password="${OPENSHIFT_PASSWORD}"  
			domainName="${DOMAIN}" 
			applicationName="${SONAR}"
			privateKeyFile="${PRIVATE_KEY}"
			gitRepository="${GIT_REPOSITORY_SONAR}"
		>		
			
		    <foreach target="-set-git-source-code-environment-variable" param="i" list="1,2,3,4,5,6,7,8,9" inheritall="true" inheritrefs="true" />	
		</configureserver>	
		

		
		<stopapplication   
			serverUrl="${OPENSHIFT_SERVER_URL}"	
			userName="${OPENSHIFT_LOGIN}" 
			password="${OPENSHIFT_PASSWORD}" 
			domainName="${DOMAIN}" 
			applicationName="${SONAR}" 
		/>
		<startapplication  
			serverUrl="${OPENSHIFT_SERVER_URL}"	
			userName="${OPENSHIFT_LOGIN}" 
			password="${OPENSHIFT_PASSWORD}" 
			domainName="${DOMAIN}" 
			applicationName="${SONAR}" 
		/>		
		
		
	</target>	
	
	
	
	<target name="restart-project" depends="-configureAnt">
	
		<stopapplication  
			serverUrl="${OPENSHIFT_SERVER_URL}"	
			userName="${OPENSHIFT_LOGIN}" 
			password="${OPENSHIFT_PASSWORD}" 
			domainName="${DOMAIN}" 
			applicationName="${APPLICATION}" 
		/>
		
		<startapplication  
			serverUrl="${OPENSHIFT_SERVER_URL}"	
			userName="${OPENSHIFT_LOGIN}" 
			password="${OPENSHIFT_PASSWORD}" 
			domainName="${DOMAIN}" 
			applicationName="${APPLICATION}" 
		/>


	
	</target>
	<target name="restart-jenkins" depends="-configureAnt">
		
		<stopapplication
			serverUrl="${OPENSHIFT_SERVER_URL}"	
			userName="${OPENSHIFT_LOGIN}" 
			password="${OPENSHIFT_PASSWORD}" 
			domainName="${DOMAIN}" 
			applicationName="${JENKINS}" 
		/>
		<startapplication    
			serverUrl="${OPENSHIFT_SERVER_URL}"	
			userName="${OPENSHIFT_LOGIN}" 
			password="${OPENSHIFT_PASSWORD}" 
			domainName="${DOMAIN}" 
			applicationName="${JENKINS}" 
		/>
		
		
	</target>	
	
	<target name="restart-sonar" depends="-configureAnt">
		
		<stopapplication
			serverUrl="${OPENSHIFT_SERVER_URL}"	
			userName="${OPENSHIFT_LOGIN}" 
			password="${OPENSHIFT_PASSWORD}" 
			domainName="${DOMAIN}" 
			applicationName="${SONAR}" 
		/>
		<startapplication    
			serverUrl="${OPENSHIFT_SERVER_URL}"	
			userName="${OPENSHIFT_LOGIN}" 
			password="${OPENSHIFT_PASSWORD}" 
			domainName="${DOMAIN}" 
			applicationName="${SONAR}" 
		/>
		
		
	</target>	
	
	<target name="show-info" depends="-configureAnt,show-info-jenkins,show-env-jenkins,show-ps-jenkins,show-info-project,show-env-project,show-ps-project,show-info-sonar,show-env-sonar,show-ps-sonar">
		
	</target>	
	
	<target name="show-info-jenkins" depends="-configureAnt">
		<applicationproperty 
			serverUrl="${OPENSHIFT_SERVER_URL}"	
			userName="${OPENSHIFT_LOGIN}" 
			password="${OPENSHIFT_PASSWORD}" 
			domainName="${DOMAIN}" 
			applicationName="${JENKINS}"  
			name="SSH_JENKINS_URL" 
			applicationProperty="SshUrl"
		/>
		
		<applicationproperty    
			serverUrl="${OPENSHIFT_SERVER_URL}"	
			userName="${OPENSHIFT_LOGIN}" 
			password="${OPENSHIFT_PASSWORD}" 
			domainName="${DOMAIN}" 
			applicationName="${JENKINS}"  
			name="GIT_JENKINS_URL" 
			applicationProperty="GitUrl"
		/>
		
		<echo>SSH URL del domino ${DOMAIN} en aplicacion ${JENKINS}</echo>
		<echo>${SSH_JENKINS_URL}</echo>		
		<echo>Git URL del domino ${DOMAIN} en aplicacion ${JENKINS}</echo>
		<echo>${GIT_JENKINS_URL}</echo>		
		
		<remote-exec   
			serverUrl="${OPENSHIFT_SERVER_URL}"	
			userName="${OPENSHIFT_LOGIN}" 
			password="${OPENSHIFT_PASSWORD}" 
			domainName="${DOMAIN}" 
			applicationName="${JENKINS}" 
			privateKeyFile="${PRIVATE_KEY}"
			cmd="echo usuario:$JENKINS_USERNAME"
		/>		
	</target>	
	<target name="show-info-project" depends="-configureAnt">
		<applicationproperty 
			serverUrl="${OPENSHIFT_SERVER_URL}"	
			userName="${OPENSHIFT_LOGIN}" 
			password="${OPENSHIFT_PASSWORD}" 
			domainName="${DOMAIN}" 
			applicationName="${APPLICATION}"  
			name="SSH_PROJECT_URL" 
			applicationProperty="SshUrl"
		/>

		<applicationproperty
			serverUrl="${OPENSHIFT_SERVER_URL}"	
			userName="${OPENSHIFT_LOGIN}" 
			password="${OPENSHIFT_PASSWORD}" 
			domainName="${DOMAIN}" 
			applicationName="${APPLICATION}"  
			name="GIT_PROJECT_URL" 
			applicationProperty="GitUrl"
		/>
		
		<echo>SSH URL del domino ${DOMAIN} en aplicacion ${APPLICATION}</echo>
		<echo>${SSH_PROJECT_URL}</echo>		
		<echo>Git URL del domino ${DOMAIN} en aplicacion ${APPLICATION}</echo>
		<echo>${GIT_PROJECT_URL}</echo>			
	</target>	
	
	<target name="show-info-sonar" depends="-configureAnt">
		<applicationproperty 
			serverUrl="${OPENSHIFT_SERVER_URL}"	
			userName="${OPENSHIFT_LOGIN}" 
			password="${OPENSHIFT_PASSWORD}" 
			domainName="${DOMAIN}" 
			applicationName="${SONAR}"  
			name="SSH_SONAR_URL" 
			applicationProperty="SshUrl"
		/>

		<applicationproperty
			serverUrl="${OPENSHIFT_SERVER_URL}"	
			userName="${OPENSHIFT_LOGIN}" 
			password="${OPENSHIFT_PASSWORD}" 
			domainName="${DOMAIN}" 
			applicationName="${SONAR}"  
			name="GIT_SONAR_URL" 
			applicationProperty="GitUrl"
		/>
		
		<echo>SSH URL del domino ${DOMAIN} en aplicacion ${SONAR}</echo>
		<echo>${SSH_SONAR_URL}</echo>		
		<echo>Git URL del domino ${DOMAIN} en aplicacion ${SONAR}</echo>
		<echo>${GIT_SONAR_URL}</echo>			
	</target>	
	
	<target name="view-log" depends="-configureAnt">
		<!-- Depende de las propiedades:
			LOG_TYPE: El tipo de fichero
			LOG_DATE: Solo si el log tiene fecha. El formato es YYYY-MM-DD. Por defecto la de hoy
			LINES: Nº de lineas a mostrar. Por defecto 100
		-->
		<tstamp>
			<format property="HOY" pattern="YYYY-MM-dd"/>
		</tstamp>
		
		<condition property="env.LOG_TYPE" else="catalina">
		  <isset property="env.LOG_TYPE"/>
		</condition>
		<condition property="env.LOG_DATE" else="${HOY}">
		  <isset property="env.LOG_DATE"/>
		</condition>		
		<condition property="env.LINES" else="100">
		  <isset property="env.LINES"/>
		</condition>		
		
		<property name="LOG_TYPE" value="${env.LOG_TYPE}" />	
		<property name="LOG_DATE" value="${env.LOG_DATE}" />
		<property name="LINES" value="${env.LINES}" />
		
		<if>
			<equals arg1="${LOG_TYPE}" arg2="catalina" />
			<then>	
				<property name="LOG_FILE" value="$OPENSHIFT_JBOSSEWS_DIR/logs/${LOG_TYPE}.${LOG_DATE}.log" />	
			</then>
			<elseif>
				<equals arg1="${LOG_TYPE}" arg2="host-manager" />
				<then>
					<property name="LOG_FILE" value="$OPENSHIFT_JBOSSEWS_DIR/logs/${LOG_TYPE}.${LOG_DATE}.txt" />	
				</then>
			</elseif>
			<elseif>
				<equals arg1="${LOG_TYPE}" arg2="localhost" />
				<then>
					<property name="LOG_FILE" value="$OPENSHIFT_JBOSSEWS_DIR/logs/${LOG_TYPE}.${LOG_DATE}.log" />	
				</then>
			</elseif>
			<elseif>
				<equals arg1="${LOG_TYPE}" arg2="manager" />
				<then>	
					<property name="LOG_FILE" value="$OPENSHIFT_JBOSSEWS_DIR/logs/${LOG_TYPE}.${LOG_DATE}.log" />	
				</then>
			</elseif>
			<elseif>
				<equals arg1="${LOG_TYPE}" arg2="localhost_access_log" />
				<then>
					<property name="LOG_FILE" value="$OPENSHIFT_JBOSSEWS_DIR/logs/${LOG_TYPE}.${LOG_DATE}.txt" />	
				</then>
			</elseif>
			
			
			<elseif>
				<equals arg1="${LOG_TYPE}" arg2="haproxy" />
				<then>
					<property name="LOG_FILE" value="$OPENSHIFT_LOG_DIR/${LOG_TYPE}.log" />	
				</then>
			</elseif>
			<elseif>
				<equals arg1="${LOG_TYPE}" arg2="haproxy_ctld" />
				<then>
					<property name="LOG_FILE" value="$OPENSHIFT_LOG_DIR/${LOG_TYPE}.log" />	
				</then>
			</elseif>
			<elseif>
				<equals arg1="${LOG_TYPE}" arg2="jbossews" />
				<then>
					<property name="LOG_FILE" value="$OPENSHIFT_LOG_DIR/${LOG_TYPE}.log" />	
				</then>
			</elseif>
			<elseif>
				<equals arg1="${LOG_TYPE}" arg2="newrelic" />
				<then>
					<property name="LOG_FILE" value="$OPENSHIFT_LOG_DIR/${LOG_TYPE}.log" />	
				</then>
			</elseif>
			<elseif>
				<equals arg1="${LOG_TYPE}" arg2="logentries" />
				<then>
					<property name="LOG_FILE" value="$OPENSHIFT_LOG_DIR/${LOG_TYPE}.log" />	
				</then>
			</elseif>
			<else>
				 <fail message="El valor del tipo de log no es valido o no esta definido. ${LOG_TYPE}"/>
			</else>
		</if>
	
		<remote-exec 
			serverUrl="${OPENSHIFT_SERVER_URL}"	
			userName="${OPENSHIFT_LOGIN}" 
			password="${OPENSHIFT_PASSWORD}"  
			domainName="${DOMAIN}" 
			applicationName="${APPLICATION}"
			privateKeyFile="${PRIVATE_KEY}"
			cmd="cat ${LOG_FILE} | tail -n ${LINES}"
		/>	
	</target>
	<target name="show-log-files" depends="-configureAnt">
		<remote-exec 
			serverUrl="${OPENSHIFT_SERVER_URL}"	
			userName="${OPENSHIFT_LOGIN}" 
			password="${OPENSHIFT_PASSWORD}"  
			domainName="${DOMAIN}" 
			applicationName="${APPLICATION}"
			privateKeyFile="${PRIVATE_KEY}"
			failonerror="no"
			cmd="ls -l $OPENSHIFT_JBOSSEWS_DIR/logs"
		/>	
		
		<remote-exec 
			serverUrl="${OPENSHIFT_SERVER_URL}"	
			userName="${OPENSHIFT_LOGIN}" 
			password="${OPENSHIFT_PASSWORD}"  
			domainName="${DOMAIN}" 
			applicationName="${APPLICATION}"
			privateKeyFile="${PRIVATE_KEY}"
			failonerror="no"
			cmd="ls -l $OPENSHIFT_LOG_DIR"
		/>			
		
	</target>
	
	<target name="show-env-project" depends="-configureAnt">
		<remote-exec 
			serverUrl="${OPENSHIFT_SERVER_URL}"	
			userName="${OPENSHIFT_LOGIN}" 
			password="${OPENSHIFT_PASSWORD}"  
			domainName="${DOMAIN}" 
			applicationName="${APPLICATION}"
			privateKeyFile="${PRIVATE_KEY}"
			cmd="env | sort"
		/>	
	</target>	
	<target name="show-env-jenkins" depends="-configureAnt">
		<remote-exec 
			serverUrl="${OPENSHIFT_SERVER_URL}"	
			userName="${OPENSHIFT_LOGIN}" 
			password="${OPENSHIFT_PASSWORD}"  
			domainName="${DOMAIN}" 
			applicationName="${JENKINS}"
			privateKeyFile="${PRIVATE_KEY}"
			cmd="env | sort"
		/>	
	</target>
	
	<target name="show-env-sonar" depends="-configureAnt">
		<remote-exec 
			serverUrl="${OPENSHIFT_SERVER_URL}"	
			userName="${OPENSHIFT_LOGIN}" 
			password="${OPENSHIFT_PASSWORD}"  
			domainName="${DOMAIN}" 
			applicationName="${SONAR}"
			privateKeyFile="${PRIVATE_KEY}"
			failonerror="no"
			cmd="env | sort"
		/>	
	</target>	
	
	<target name="delete-log-files" depends="-configureAnt">
		<remote-exec 
			serverUrl="${OPENSHIFT_SERVER_URL}"	
			userName="${OPENSHIFT_LOGIN}" 
			password="${OPENSHIFT_PASSWORD}"  
			domainName="${DOMAIN}" 
			applicationName="${APPLICATION}"
			privateKeyFile="${PRIVATE_KEY}"
			failonerror="no"
			cmd="rm -v $OPENSHIFT_JBOSSEWS_DIR/logs/*.txt"
		/>	
		
		<remote-exec 
			serverUrl="${OPENSHIFT_SERVER_URL}"	
			userName="${OPENSHIFT_LOGIN}" 
			password="${OPENSHIFT_PASSWORD}"  
			domainName="${DOMAIN}" 
			applicationName="${APPLICATION}"
			privateKeyFile="${PRIVATE_KEY}"
			failonerror="no"
			cmd="rm -v $OPENSHIFT_LOG_DIR/*.log"
		/>			
		
		<remote-exec 
			serverUrl="${OPENSHIFT_SERVER_URL}"	
			userName="${OPENSHIFT_LOGIN}" 
			password="${OPENSHIFT_PASSWORD}"  
			domainName="${DOMAIN}" 
			applicationName="${JENKINS}"
			privateKeyFile="${PRIVATE_KEY}"
			failonerror="no"
			cmd="rm -v $OPENSHIFT_JENKINS_LOG_DIR/*.log"
		/>	

		<remote-exec 
			serverUrl="${OPENSHIFT_SERVER_URL}"	
			userName="${OPENSHIFT_LOGIN}" 
			password="${OPENSHIFT_PASSWORD}"  
			domainName="${DOMAIN}" 
			applicationName="${SONAR}"
			privateKeyFile="${PRIVATE_KEY}"
			failonerror="no"
			cmd="rm -v $OPENSHIFT_DIY_LOG_DIR/*.log"
		/>	
		
		
	</target>	
	
	<target name="show-ps-project" depends="-configureAnt">
		<remote-exec 
			serverUrl="${OPENSHIFT_SERVER_URL}"	
			userName="${OPENSHIFT_LOGIN}" 
			password="${OPENSHIFT_PASSWORD}"  
			domainName="${DOMAIN}" 
			applicationName="${APPLICATION}"
			privateKeyFile="${PRIVATE_KEY}"
			cmd="ps -eo pid,cmd"
		/>	
	</target>	
	<target name="show-ps-jenkins" depends="-configureAnt">
		<remote-exec 
			serverUrl="${OPENSHIFT_SERVER_URL}"	
			userName="${OPENSHIFT_LOGIN}" 
			password="${OPENSHIFT_PASSWORD}"  
			domainName="${DOMAIN}" 
			applicationName="${JENKINS}"
			privateKeyFile="${PRIVATE_KEY}"
			cmd="ps -eo pid,cmd"
		/>	
	</target>	
	<target name="show-ps-sonar" depends="-configureAnt">
		<remote-exec 
			serverUrl="${OPENSHIFT_SERVER_URL}"	
			userName="${OPENSHIFT_LOGIN}" 
			password="${OPENSHIFT_PASSWORD}"  
			domainName="${DOMAIN}" 
			applicationName="${SONAR}"
			privateKeyFile="${PRIVATE_KEY}"
			failonerror="no"
			cmd="ps -eo pid,cmd"
		/>	
	</target>		
</project>
